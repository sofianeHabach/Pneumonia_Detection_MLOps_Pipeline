name: ML Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ml-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Cloner le d√©p√¥t
        uses: actions/checkout@v3

      - name: üêç Installer Python 3.9.20
        uses: actions/setup-python@v5
        with:
          python-version: '3.9.20'

      - name: üì¶ Installer les d√©pendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[s3]  # ou [azure], [gdrive], selon ton remote

      - name: üßπ Pr√©traitement des donn√©es
        run: |
          python data_preprocessing.py
          dvc add data/pneumonia_dataset.csv
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git add data/pneumonia_dataset.csv.dvc
          git diff --cached --quiet || git commit -m "Track dataset with DVC after preprocessing"

      - name: ‚úÇÔ∏è Split des donn√©es
        run: |
          python train_test_split.py
          dvc add data/splits/train_split.csv
          dvc add data/splits/valid_split.csv
          dvc add data/splits/test_split.csv
          git add data/splits/*.dvc
          git diff --cached --quiet || git commit -m "Track data splits with DVC"

      - name: üß† Entra√Æner le mod√®le
        run: |
          python model_training.py
          dvc add -f outputs/models/Enhanced_model_V2.keras
          git add -f outputs/models/Enhanced_model_V2.keras.dvc
          git diff --cached --quiet || git commit -m "Track trained model with DVC"

      - name: üìä √âvaluer le mod√®le
        run: python model_evaluation.py

      - name: ‚úÖ Valider le mod√®le
        run: |
          python -c "
import json
with open('outputs/results/classification_report.json') as f:
    report = json.load(f)
seuil = 0.9
f1_normal = report['NORMAL']['f1-score']
f1_pneumonia = report['PNEUMONIA']['f1-score']
print(f'F1 NORMAL: {f1_normal}, F1 PNEUMONIA: {f1_pneumonia}')
if f1_normal < seuil or f1_pneumonia < seuil:
    raise SystemExit('‚ùå Mod√®le rejet√© : F1-score trop bas')
else:
    print('‚úÖ Mod√®le valid√©')"

      - name: üìÅ Sauvegarder les fichiers produits
        uses: actions/upload-artifact@v4
        with:
          name: all-artifacts
          path: |
            **/*.txt
            **/*.png
            **/*.h5
            **/*.csv
            **/*.keras
